name: üõú Mediatek_mt7986
on:
  workflow_dispatch:
    inputs:
      lan_addr:
        description: 'Setting default LAN address'
        required: true
        default: '192.168.1.10'
      root_password:
        description: 'ËÆæÁΩÆÈªòËÆ§ root ÂØÜÁ†ÅÔºàÂèØÈÄâÔºåÈªòËÆ§ passwordÔºâ'
        required: false
        default: 'password'
env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-6.6
  REPO_BRANCH: openwrt-24.10-6.6
  CONFIG_FILE: configs/mediatek_mt7986.config
  DIY_SCRIPT: scripts/diy-mediatek.sh
  CACHE_VER: v1            # Âè™Ë¶ÅÊîπÂä®ËøôÈáåÔºå‰∏âÂ±ÇÁºìÂ≠òÈÉΩ‰ºöÂ§±Êïà
  UPLOAD_BIN_DIR: false
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: Mediatek_mt7986
  MIRROR: https://mirrors.tuna.tsinghua.edu.cn/openwrt   # ‚Üê ‰æõËÑöÊú¨‰ΩøÁî®
  GITEA: git.kejizero.online/zhao
  GITHUB: github.com
jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 420
    steps:
      # ------------------- 1Ô∏è‚É£ ÁéØÂ¢ÉÂáÜÂ§á -------------------
      - name: Setup environment
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          git config --global user.name actions
          git config --global user.email action@github.com
      - name: Free disk space
        uses: sbwml/actions@free-disk
      # ------------------- 2Ô∏è‚É£ ‰ª£Á†ÅÊ£ÄÂá∫ -------------------
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_URL }}
          ref: ${{ env.REPO_BRANCH }}
          path: openwrt
          fetch-depth: 1
      # ------------------- 3Ô∏è‚É£ ÁºìÂ≠òÂ±Ç -------------------
      - name: Cache Downloads
        uses: actions/cache@v4
        with:
          path: openwrt/dl
          key: dl-${{ runner.os }}-${{ env.CACHE_VER }}-${{ env.REPO_BRANCH }}
          restore-keys: |
            dl-${{ runner.os }}-${{ env.CACHE_VER }}-
            dl-${{ runner.os }}-
      - name: Cache Toolchain
        uses: actions/cache@v4
        with:
          path: |
            openwrt/staging_dir/host
            openwrt/staging_dir/toolchain-*
          key: toolchain-${{ runner.os }}-${{ env.CACHE_VER }}-${{ env.REPO_BRANCH }}
          restore-keys: |
            toolchain-${{ runner.os }}-${{ env.CACHE_VER }}-
            toolchain-${{ runner.os }}-
      - name: Cache Feeds
        uses: actions/cache@v4
        with:
          path: openwrt/feeds
          key: feeds-${{ runner.os }}-${{ env.CACHE_VER }}-${{ env.REPO_BRANCH }}
          restore-keys: |
            feeds-${{ runner.os }}-${{ env.CACHE_VER }}-
            feeds-${{ runner.os }}-
      # ------------------- 4Ô∏è‚É£ ccache -------------------
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ccache-${{ runner.os }}-${{ env.CACHE_VER }}
          max-size: 10G
          compress: true
      # ------------------- 5Ô∏è‚É£ LLVM -------------------
      - name: Install LLVM (v14)
        uses: sbwml/actions@install-llvm
        with:
          version: 14
      # ------------------- 6Ô∏è‚É£ Feeds -------------------
      - name: Install Feeds
        run: |
          cd $OPENWRT_PATH
          # Áõ¥Êé•‰ΩøÁî®Ëá™ÂÆö‰πâÁöÑ feeds.conf.defaultÔºàÂ∑≤Âú®‰ªìÂ∫ìÊ†πÁõÆÂΩïÂáÜÂ§áÂ•ΩÔºâ
          curl -fsSL -o feeds.conf.default \
            https://raw.githubusercontent.com/grandway2025/Actions-OpenWrt/main/Customize/feeds/feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      # ------------------- 7Ô∏è‚É£ Âä†ËΩΩËá™ÂÆö‰πâÈÖçÁΩÆ & ËøêË°å DIY -------------------
      - name: Load Custom Configuration
        env:
          LAN: ${{ github.event.inputs.lan_addr }}
          ROOT_PASSWORD: ${{ github.event.inputs.root_password }}
        run: |
          echo "::group::Load custom configuration"
          cd $OPENWRT_PATH
          [ -e ../files ] && mv ../files ./files
          cp ../${CONFIG_FILE} .config
          chmod +x $GITHUB_WORKSPACE/${DIY_SCRIPT}
          $GITHUB_WORKSPACE/${DIY_SCRIPT}
          # ËøêË°å‰Ω†ÂéüÊù•ÁöÑ preset ËÑöÊú¨ÔºàÂ¶ÇÊûú‰ªçÈúÄË¶ÅÔºâ
          $GITHUB_WORKSPACE/scripts/preset-mihimo-core.sh $CLASH_KERNEL
          $GITHUB_WORKSPACE/scripts/preset-adguard-core.sh $CLASH_KERNEL
          # ÊúÄÂêé‰∏ÄÊ¨° make defconfigÔºàÁ°Æ‰øù .config ÂÆåÊï¥Ôºâ
          make defconfig
          echo "::endgroup::"
          # ÂØºÂá∫ÂèòÈáèÔºåÂêéÈù¢Áõ¥Êé•‰ΩøÁî® env.xxx
          DEVICE_TARGET=$(grep ^CONFIG_TARGET_BOARD .config | cut -d'"' -f2)
          DEVICE_SUBTARGET=$(grep ^CONFIG_TARGET_SUBTARGET .config | cut -d'"' -f2)
          echo "DEVICE_TARGET=$DEVICE_TARGET"   >> $GITHUB_ENV
          echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV
          echo "IP_ADDR=$LAN" >> $GITHUB_ENV
          echo "ROOT_PASSWORD=$ROOT_PASSWORD" >> $GITHUB_ENV
      # ------------------- 8Ô∏è‚É£ ÁºñËØë -------------------
      - name: Compile Firmware
        id: compile
        run: |
          echo "::group::Compile firmware"
          cd $OPENWRT_PATH
          export PATH="/usr/lib/ccache:$PATH"
          ccache -s
          make -j$(nproc) || make -j1 V=s
          ccache -s
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FILE_DATE=$(date +%Y.%m.%d-%H%M)" >> $GITHUB_ENV
          echo "::endgroup::"
      # ------------------- 9Ô∏è‚É£ ÊâìÂåÖ & ‰∏ä‰º† -------------------
      - name: Organise Files
        if: steps.compile.outputs.status == 'success'
        run: |
          echo "::group::Organise files"
          cd $OPENWRT_PATH/bin/targets/*/*
          cat sha256sums
          cp $OPENWRT_PATH/.config build.config
          mkdir -p kernel
          mv -f packages/* kernel
          tar -Jcf kernel.tar.xz kernel   # Â§öÁ∫øÁ®ã xzÔºå‰ΩìÁßØÊõ¥Â∞è
          echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV
          echo "KERNEL=$(cat *.manifest | grep ^kernel | cut -d- -f2 | tr -d ' ')" >> $GITHUB_ENV
          echo "::endgroup::"
      - name: Upload Firmware to Release
        if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
        uses: ncipollo/release-action@v1.14.0
        with:
          name: ${{ env.FILE_DATE }}-${{ env.FIRMWARE_TAG }}
          tag: ${{ env.FIRMWARE_TAG }}-OpenWrt-${{ env.FILE_DATE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          artifacts: ${{ env.FIRMWARE_PATH }}/*
          body: |
            **OpenWrt Mediatek mt7986 Firmware**
            - **Âπ≥Âè∞**: ${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
            - **Ê∫êÁ†Å**: ${{ env.REPO_URL }}
            - **ÂàÜÊîØ**: ${{ env.REPO_BRANCH }}
            - **ÂÜÖÊ†∏**: ${{ env.KERNEL }}
            - **ÈªòËÆ§ IP**: ${{ env.IP_ADDR }}
            - **ÈªòËÆ§ÂØÜÁ†Å**: ${{ env.ROOT_PASSWORD }}
            - **Êèê‰∫§**: ${{ env.COMMIT_HASH }}Ôºà${{ env.COMMIT_DATE }}Ôºâ
